<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>chrome高级调试技巧</title>
      <link href="/2022/06/27/undefined.html"/>
      <url>/2022/06/27/undefined.html</url>
      
        <content type="html"><![CDATA[<p>​        今天在掘金上面看到了一篇文章列举了很多一般不知道的chrome调试技巧，感觉非常好用，在这里做个记录，也分享给大家。文章作者@<a href="https://juejin.cn/user/3438928099549352">前端胖头鱼 的个人主页 - 动态 - 掘金 (juejin.cn)</a></p><h4 id="1-一键重新发起请求"><a href="#1-一键重新发起请求" class="headerlink" title="1. 一键重新发起请求"></a>1. 一键重新发起请求</h4><p>在与后端接口联调或排查线上BUG时，你是不是也经常听到他们说这句话：<strong>你再发起一次请求试试，我这边看下为啥出错了！</strong></p><p>重发请求，这有一种简单到发指的方式。</p><ol><li>选中<code>Network</code></li><li>点击<code>Fetch/XHR</code></li><li>选择要重新发送的请求</li><li>右键选择<code>Replay XHR</code><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e056245b2a9e4e6dbfb39db6903f9275~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></li></ol><p>不用刷新页面，不用走页面交互，是不是非常爽！！！</p><h4 id="2-在控制台快速发起请求"><a href="#2-在控制台快速发起请求" class="headerlink" title="2. 在控制台快速发起请求"></a>2. 在控制台快速发起请求</h4><p>还是联调或修BUG的场景，针对同样的请求，有时候需要<strong>修改入参</strong>重新发起，有啥快捷方式？</p><ol><li><p>选中<code>Network</code></p></li><li><p>点击<code>Fetch/XHR</code></p></li><li><p>选择<code>Copy as fetch</code></p></li><li><p>控制台粘贴代码</p></li><li><p>修改参数，回车搞定</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f91af146bbee42cc9e99badf83de83a8~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><p>曾经我总是通过改代码或者手写<code>fetch</code>的方式处理，想想真是太傻了…</p></li></ol><h4 id="3-复制JavaScript-变量"><a href="#3-复制JavaScript-变量" class="headerlink" title="3. 复制JavaScript 变量"></a>3. 复制JavaScript 变量</h4><p>假如你的代码经过计算会输出一个<strong>复杂的对象</strong>，且需要被复制下来发送给其他人，怎么办？</p><ol><li><p>使用<code>copy</code>函数，将<code>对象</code>作为入参执行即可</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8eac65d357c04a779149719621f477c0~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><p>以前我总是通过<code>JSON.stringify(fetfishObj, null, 2)</code>打印到控制台，再手动复制粘贴，这效率实在是太低了…</p></li></ol><h4 id="4-控制台获取Elementsi面板选中的元素"><a href="#4-控制台获取Elementsi面板选中的元素" class="headerlink" title="4. 控制台获取Elementsi面板选中的元素"></a>4. 控制台获取Elementsi面板选中的元素</h4><p>调试网页时通过<code>Elements</code>面板选中元素后，如果想通过<code>JS</code>知道它的一些属性，如<code>宽</code>、<code>高</code>、<code>位置</code>等怎么办呢？</p><ol><li><p>通过<code>Elements</code>选择要调试的元素</p></li><li><p>控制台直接用<code>$0</code>访问</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4fd8a970c19842a7b73ee5d43f64efa6~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p></li></ol><h4 id="5-截取一张全屏的网页"><a href="#5-截取一张全屏的网页" class="headerlink" title="5. 截取一张全屏的网页"></a>5. 截取一张全屏的网页</h4><p>偶尔咱们也会有对网页截屏的需求，一屏还好，系统自带的截屏或者微信截图等都可以办到，但是要求<strong>将超出一屏的内容也截下来咋办呢</strong>？</p><ol><li><p>准备好需要截屏的内容</p></li><li><p><code>cmd + shift + p</code> 执行<code>Command</code>命令</p></li><li><p>输入<code>Capture full size screenshot</code> 按下回车</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44643079db90418d8d359d4278605732~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><p><strong>如果要截取选中的部分元素呢？</strong></p><p>答案也很简单，第三步输入<code>Capture node screenshot</code>即可</p></li></ol><h4 id="6-一键展开所有的DOM元素"><a href="#6-一键展开所有的DOM元素" class="headerlink" title="6. 一键展开所有的DOM元素"></a>6. 一键展开所有的DOM元素</h4><p>调试元素时，在层级比较深的情况下，你是不是也经常一个个展开去调试？有一种更加快捷的方式</p><ol><li><p>按住<code>opt</code>键 + click（需要展开的最外层元素）</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c09ba071e1e34b9387ee0071905ad21a~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p></li></ol><h4 id="7-控制台引用上一次执行的结果"><a href="#7-控制台引用上一次执行的结果" class="headerlink" title="7. 控制台引用上一次执行的结果"></a>7. 控制台引用上一次执行的结果</h4><p>来看看这个场景，我猜你也一定遇到过, 对某个字符串进行了各种工序，然后我们想知道每一步执行的结果，该咋办？。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">'fatfish'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// hsiftaf</span></code></pre><p><strong>你可能会这样做</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 第1步</span><span class="token string">'fatfish'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ['f', 'a', 't', 'f', 'i', 's', 'h']</span><span class="token comment" spellcheck="true">// 第2步</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token string">'s'</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ['h', 's', 'i', 'f', 't', 'a', 'f']</span><span class="token comment" spellcheck="true">// 第3步</span><span class="token punctuation">[</span><span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token string">'s'</span><span class="token punctuation">,</span> <span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// hsiftaf</span></code></pre><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10903c73ac3945e39e820bdbef2be2a3~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><p><strong>更简单的方式</strong></p><p>使用<code>$_</code>引用上一次操作的结果，不用每次都复制一遍</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 第1步</span><span class="token string">'fatfish'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ['f', 'a', 't', 'f', 'i', 's', 'h']</span><span class="token comment" spellcheck="true">// 第2步</span>$_<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ['h', 's', 'i', 'f', 't', 'a', 'f']</span><span class="token comment" spellcheck="true">// 第3步</span>$_<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// hsiftaf</span></code></pre><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b259e40d2d1e4d489058019617e7ac6c~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><h4 id="8-快速切换主题"><a href="#8-快速切换主题" class="headerlink" title="8. 快速切换主题"></a>8. 快速切换主题</h4><p>有的同学喜欢chrome的白色主题，有的喜欢黑色，我们可以使用快捷键迅速切换两个主题。</p><ol><li><p><code>cmd + shift + p</code> 执行<code>Command</code>命令</p></li><li><p>输入<code>Switch to dark theme</code>或者<code>Switch to light theme</code>进行主题切换</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6626dd2efcf4fafb01fb354275c5c33~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p></li></ol><h4 id="9-“-“和”-“选择器"><a href="#9-“-“和”-“选择器" class="headerlink" title="9. “$“和”$$“选择器"></a>9. “<code>$</code>“和”<code>$$</code>“选择器</h4><p>在控制台使用<code>document.querySelector</code>和<code>document.querySelectorAll</code>选择当前页面的元素是最常见的需求了，不过着实有点太长了，咱们可以使用<code>$</code>和<code>$$</code>替代。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b99835a401524edeae0eebe599042df7~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p><h4 id="10-i直接在控制台安装npm包"><a href="#10-i直接在控制台安装npm包" class="headerlink" title="10. $i直接在控制台安装npm包"></a>10. <code>$i</code>直接在控制台安装npm包</h4><p>你遇到过这个场景吗？有时候想使用比如<code>dayjs</code>或者<code>lodash</code>的某个<code>API</code>，但是又不想去官网查，如果可以在控制台直接试出来就好了。</p><p><a href="https://link.juejin.cn/?target=https://chrome.google.com/webstore/detail/console-importer/hgajpakhafplebkdljleajgbpdmplhie/related">Console Importer</a> 就是这么一个插件，用来在控制台直接安装<code>npm</code>包。</p><ol><li><p>安装<code>Console Importer</code>插件</p></li><li><p>$i(‘name’)安装npm包</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/980db6a2b2d74115bdab37e5b061a7a1~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p></li></ol><h4 id="11-Add-conditional-breakpoint条件断点的妙用"><a href="#11-Add-conditional-breakpoint条件断点的妙用" class="headerlink" title="11. Add conditional breakpoint条件断点的妙用"></a>11. Add conditional breakpoint条件断点的妙用</h4><p>假设有下面这段代码，咱们希望食物名字是<code>🍫</code>时才触发断点，可以怎么弄？</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> foods <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'🍔'</span><span class="token punctuation">,</span>    price<span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'🍫'</span><span class="token punctuation">,</span>    price<span class="token punctuation">:</span> <span class="token number">15</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'🍵'</span><span class="token punctuation">,</span>    price<span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">]</span>foods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>name<span class="token punctuation">,</span> v<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><p>这在大量数据下，只想对符合条件时打断点条件将会非常方便。试想如果没有条件断点咱们是不是要点n次debugger？</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/43a4882a64374e3eb3e492380c248ae6~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> chrome, 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2022/06/23/35811.html"/>
      <url>/2022/06/23/35811.html</url>
      
        <content type="html"><![CDATA[<h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>这是一个介绍</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"赵遵凯"</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">graph TD    A(javaScript 高级) --> B1(基本知识)    A --> B2(面向对象编程)    A --> B3(继承)    A --> B4(函数进阶)    A --> B5(正则表达式)</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/22/16107.html"/>
      <url>/2022/06/22/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
